@using MyToolkit.Html
@model DDD.MVC.Areas.Sp.ViewModels.ClientViewModel


@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>ClientViewModel</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ClientId)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
				@Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Phones, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.CollectionEditorFor(model => model.Phones, "Editors/_PhonesEditor", "/sp/clients/GetPhones/" + Model.ClientId, "Adicionar", new { @class = "btn btn-success" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
